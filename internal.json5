{
  $schema: 'https://docs.renovatebot.com/renovate-schema.json',
  description: 'Internal Renovate configuration for @bfra-me.',

  extends: [
    'github>bfra-me/renovate-config:group/default',
    'github>bfra-me/renovate-config:maintenance/security',
    'github>bfra-me/renovate-config:maintenance/weeklyLockFileUpdates',
    'github>bfra-me/renovate-config:vendors/elstudio',
  ],

  timezone: 'America/Phoenix',
  updateNotScheduled: true,

  transitiveRemediation: true,
  postUpdateOptions: [
    'gomodTidy',
    'npmDedupe',
    'pnpmDedupe',
    'yarnDedupeHighest',
  ],

  automergeStrategy: 'squash',
  automergeType: 'branch',
  platformAutomerge: true,

  commitBodyTable: true,
  commitMessageAction: 'update',
  commitMessageLowerCase: 'never',
  lockFileMaintenance: {
    commitMessageAction: 'maintain lockfiles',
  },
  pin: {
    commitMessageAction: 'pin',
  },
  pinDigest: {
    commitMessageAction: 'pin (digest)',
  },
  replacement: {
    commitMessageAction: 'replace',
  },
  rollback: {
    commitMessageAction: 'rollback',
  },

  ignorePresets: [':ignoreModulesAndTests'],
  ignorePaths: [
    '**/node_modules/**',
    '**/bower_components/**',
    '**/vendor/**',
    '**/examples/**',
    '**/__tests__/**',
    '**/test/**',
    '**/tests/**',
    '**/__fixtures__/**',
    '**/out/**',
    '**/dist/**',
  ],

  addLabels: ['dependencies'],

  // TODO: Renovate does not preserve JSON5 config files
  configMigration: false,
  configWarningReuseIssue: false,

  dependencyDashboardTitle: 'Renovate Dashboard',

  prConcurrentLimit: 5,
  prCreation: 'not-pending',
  prHourlyLimit: 0,
  rebaseWhen: 'behind-base-branch',
  recreateClosed: true,

  assigneesFromCodeOwners: true,
  assigneesSampleSize: 1,
  reviewersFromCodeOwners: true,
  reviewersSampleSize: 1,

  packageRules: [
    {
      descrioption: 'Enable dependency dashboard approval for major updates.',
      matchUpdateTypes: ['major'],
      dependencyDashboardApproval: true,
      dependencyDashboardLabels: ['approval-pending'],
    },
    {
      matchPackageNames: ['go', 'python', 'typescript'],
      matchUpdateTypes: ['minor'],
      dependencyDashboardApproval: true,
      dependencyDashboardLabels: ['approval-pending'],
    },
    {
      matchCurrentVersion: '>=0.1.0 <1.0.0-0',
      matchUpdateTypes: ['minor'],
      dependencyDashboardApproval: true,
      dependencyDashboardLabels: ['approval-pending'],
      excludePackageNames: ['lucide-react'],
      excludePackagePrefixes: ['@bfra.me/', 'bfra-me/'],
    },
    {
      description: 'Automerge patch update types.',
      matchUpdateTypes: ['patch', 'digest'],
      addLabels: ['automerge'],
      automerge: true,
      rebaseWhen: 'behind-base-branch',
    },
    {
      description: 'Automerge minor update types except unstable (`0.x.x`) versions.',
      matchUpdateTypes: ['minor'],
      matchCurrentVersion: '!/^0\\./',
      addLabels: ['automerge'],
      automerge: true,
      rebaseWhen: 'behind-base-branch',
    },
    {
      description: 'Pin GitHub Action digests to SemVer versions.',
      matchDepTypes: ['action'],
      excludeDepPatterns: [
        '^elstudio/actions-settings(\\/.*)?$',
        '^exivity/actions(\\/.*)?$',
      ],
      extractVersion: '^(?<version>v?\\d+(\\.\\d+\\.\\d+)?)$',
      pinDigests: true,
      versioning: 'regex:^v?(?<major>\\d+)(\\.(?<minor>\\d+)\\.(?<patch>\\d+))?$',
    },
    {
      description: 'Automerge GitHub Actions as PRs.',
      matchManagers: ['github-actions'],
      automergeType: 'pr',
      prCreation: 'immediate',
      rebaseWhen: 'conflicted',
    },
    {
      description: 'Group @types/* dependencies together with the npm dependency they are for.',
      matchDatasources: ['npm'],
      matchDepTypes: ['dependencies', 'devDependencies'],
      matchPackagePrefixes: ['@types/'],
      groupName: "{{{replace '^@types/' '' depName}}}",
      groupSlug: "{{{replace '^types-' '' depNameSanitized}}}",
    },
    {
      description: 'Group npm dependencies by name.',
      matchDatasources: ['npm'],
      matchDepTypes: ['dependencies', 'devDependencies'],
      excludePackagePrefixes: ['@types/'],
      groupName: '{{{depName}}}',
      groupSlug: '{{{depNameSanitized}}}',
    },
    {
      description: 'Add support for @bfra-me Renovate config preset.',
      matchDepNames: ['bfra-me/renovate-config'],
      commitMessageTopic: '{{{depName}}} preset',
    },
    {
      description: 'Exclude broken versions of the `bfra-me/renovate-config` preset.',
      matchDepNames: ['bfra-me/renovate-config'],
      allowedVersions: '>=v3.4.3',
    },
    {
      description: 'Enable platform automerge feature for @bfra-me organization repositories.',
      matchRepositories: ['bfra-me/**'],
      platformAutomerge: true,
    },
    {
      description: 'Remove minimum release age config for bfra.me packages.',
      matchPackagePrefixes: ['@bfra.me/', 'bfra-me/'],
      matchSourceUrlPrefixes: ['https://github.com/bfra-me/'],
      minimumReleaseAge: null,
      prNotPendingHours: 0,
    },
    {
      description: 'Disable dependency dashboard for unstable versions of bfra.me packages.',
      matchCurrentVersion: '>=0.1.0 <1.0.0-0',
      matchPackagePrefixes: ['@bfra.me/', 'bfra-me/'],
      matchUpdateTypes: ['digest', 'minor', 'patch'],
      dependencyDashboardApproval: false,
    },
    {
      description: 'Disable digest and version pinning for @bfra-me GitHub actions and reusable workflows.',
      matchDepTypes: ['action'],
      matchPackagePrefixes: ['bfra-me/'],
      pinDigests: false,
    },
  ],
}
